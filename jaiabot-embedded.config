#!/bin/sh -e

# Source debconf library.
. /usr/share/debconf/confmodule

# Enable backup capability
db_capb backup

# General function for handling debconf input and go
# Returns 0 if the user moves forward, 1 if the user chooses to back up
debconf_input_and_go() {
    db_input "$1" "$2" || true
    if db_go; then
        return 0
    else
        return 1
    fi
}

# State machine for shared configuration
configure_shared() {
    local state="TYPE"
    while true; do
        case $state in
            "TYPE")
                if debconf_input_and_go high jaiabot-embedded/type; then
                    state="FLEET_ID"
                fi
                ;;
            "FLEET_ID")
                if debconf_input_and_go high jaiabot-embedded/fleet_id; then
                    state="LED_TYPE"
                else
                    state="TYPE"
                fi
                ;;
            "LED_TYPE")
                if debconf_input_and_go high jaiabot-embedded/led_type; then
                    state="ELECTRONICS_STACK"
                else
                    state="FLEET_ID"
                fi
                ;;
            "ELECTRONICS_STACK")
                if debconf_input_and_go high jaiabot-embedded/electronics_stack; then
                    state="USER_ROLE"
                else
                    state="LED_TYPE"
                fi
                ;;
            "USER_ROLE")
                if debconf_input_and_go medium jaiabot-embedded/user_role; then
                    state="MODE"
                else
                    state="ELECTRONICS_STACK"
                fi
                ;;
            "MODE")
                if debconf_input_and_go medium jaiabot-embedded/mode; then
                    db_get jaiabot-embedded/mode
                    JAIA_MODE=$RET
                    if [ "$JAIA_MODE" = "simulation" ]; then
                        state="WARP"
                    else
                        return 0  # Success, end configuration
                    fi
                else
                    state="USER_ROLE"
                fi
                ;;
            # only ask if mode == simulation
            "WARP")
                if debconf_input_and_go medium jaiabot-embedded/warp; then
                    return 0  # Success, end configuration
                else
                    state="MODE"
                fi
                ;;
            *)
                echo "Invalid state encountered in configure_shared: $state"
                return 1
                ;;
        esac
    done
}

# State machine for "bot" configuration
configure_bot() {
    local state="BOT_ID"
    while true; do
        case $state in
            "BOT_ID")
                if debconf_input_and_go high jaiabot-embedded/bot_id; then
                    state="ARDUINO_TYPE"
                fi
                ;;
            "ARDUINO_TYPE")
                if debconf_input_and_go high jaiabot-embedded/arduino_type; then
                    db_get jaiabot-embedded/arduino_type
                    ARDUINO_TYPE=$RET
                    if [ "$ARDUINO_TYPE" = "usb_old" ] || [ "$ARDUINO_TYPE" = "usb_new" ]; then
                        db_set jaiabot-embedded/arduino_type usb
                    fi
                    state="IMU_TYPE"
                else
                    state="BOT_ID"
                fi
                ;;
            "IMU_TYPE")
                if debconf_input_and_go high jaiabot-embedded/imu_type; then
                    state="BOT_TYPE"
                else
                    state="ARDUINO_TYPE"
                fi
                ;;
            "BOT_TYPE")
                if debconf_input_and_go high jaiabot-embedded/bot_type; then
                    state="DATA_OFFLOAD_IGNORE_TYPE"
                else
                    state="IMU_TYPE"
                fi
                ;;
            "DATA_OFFLOAD_IGNORE_TYPE")
                if debconf_input_and_go high jaiabot-embedded/data_offload_ignore_type; then
                    state="IMU_INSTALL_TYPE"
                else
                    state="BOT_TYPE"
                fi
                ;;
            "IMU_INSTALL_TYPE")
                if debconf_input_and_go high jaiabot-embedded/imu_install_type; then
                    return 0  # Success, end configuration
                else
                    state="DATA_OFFLOAD_IGNORE_TYPE"
                fi
                ;;
            *)
                echo "Invalid state encountered in configure_bot: $state"
                return 1
                ;;
        esac
    done
}

# State machine for "hub" configuration
configure_hub() {
    local state="HUB_ID"
    while true; do
        case $state in
            "HUB_ID")
                if debconf_input_and_go high jaiabot-embedded/hub_id; then
                    return 0  # Success, end configuration
                fi
                ;;
            *)
                echo "Invalid state encountered in configure_hub: $state"
                return 1
                ;;
        esac
    done
}

# Invoke the shared configuration state machine (both bot/hub settings)
configure_shared

db_get jaiabot-embedded/type
JAIA_TYPE=$RET

if [ "$JAIA_TYPE" = "bot" ]; then
    configure_bot
elif [ "$JAIA_TYPE" = "hub" ]; then
    configure_hub
fi
